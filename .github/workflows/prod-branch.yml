name: Push build to branch

on:
  pull_request:
    branches: ['main']
    types: ['closed']

  workflow_dispatch:

env:
  APP_NAME: gs-backend

jobs:
  eslint:
    name: Validate with ESLint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: |
          npm install eslint@latest
          npm install @microsoft/eslint-formatter-sarif@latest

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc.js
          --ext .ts,.js,.tsx,.jsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

  test:
    name: Unit-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checking code
        uses: actions/checkout@v3

      - name: Installing NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Installing dependencies
        run: npm ci

      - name: Running tests
        run: npm run test

  docker:
    name: Docker image test
    runs-on: ubuntu-latest

    steps:
      - name: Checking code
        uses: actions/checkout@v3

      - name: Creating '.env' file
        shell: bash
        env:
          ENV: ${{ secrets.ENV_FILE }}
        run: |
          echo "$ENV" > .env

      - name: Build Docker image
        run: docker build . --no-cache -t $APP_NAME

      - name: Remove Docker image
        run: docker rmi $APP_NAME

  prod:
    name: Create build and push
    runs-on: ubuntu-latest

    steps:
      - name: Checking out repository
        uses: actions/checkout@v2

      - name: Install all dependencies
        run: npm install

      - name: Building application
        run: npm run build

      - name: Push from dev to prod branch.
        uses: Automattic/action-commit-to-branch@master
        with:
          dest_branch: 'main'
          source_branch: 'production'
          commit_message: 'Tested, lined and auto-merged with Production'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required

