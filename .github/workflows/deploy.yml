name: Deploy on development VPS

on:
  pull_request:
    branches: ['main']
    types: ['closed']

  workflow_dispatch:

env:
  APP_NAME: gadget-shop

jobs:
  deploy:
    name: Lint, test and deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Install ESLint
      #   run: |
      #     npm install eslint@latest
      #     npm install @microsoft/eslint-formatter-sarif@latest

      # - name: Run lint
      #   run: npx eslint .
      #     --config .eslintrc.js
      #     --ext .ts,.js,.tsx,.jsx
      #     --format @microsoft/eslint-formatter-sarif
      #     --output-file eslint-results.sarif
      #   continue-on-error: false

      # - name: Install NodeJS 20.x
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 20.x
      #     cache: 'npm'

      # - name: Install dependencies
      #   run: npm install

      # - name: Run tests
      #   run: npm run test

      # - name: Create build
      #   run: npm run build

      # - name: Create '.env' file
      #   shell: bash
      #   env:
      #     ENV: ${{ secrets.ENV_FILE }}
      #   run: |
      #     echo "$ENV" > .env

      # - name: Docker test build image
      #   run: docker build . --no-cache -t $APP_NAME

      # - name: Docker drop test image
      #   run: docker rmi $APP_NAME

      - name: Deploying using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_SECRET_KEY }}
          port: 22
          script: |
            cd ~/apps/$APP_NAME
            git pull origin main
            git status
            npm install
            npm run build
            pm2 start /dist/src/main.js --name $APP_NAME

      # - name: Install dependencies and build
      #   run: |
      #     npm install
      #     npm run build

      # - name: Deploy to VPS
      #   run: |
      #     scp -r ./dist/* ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}:/apps/$APP_NAME
      #     ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} 'cd /apps/$APP_NAME/src && node'
