name: Deploy on development VPS

on:
  pull_request:
    branches: ['main']
    types: ['closed']
  push:
    branches: ['main']

  workflow_dispatch:

jobs:
  deploy:
    name: Lint, test and deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ESLint
        run: |
          npm install eslint@latest
          npm install @microsoft/eslint-formatter-sarif@latest

      - name: Run lint
        run: npx eslint .
          --config .eslintrc.js
          --ext .ts,.js,.tsx,.jsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: false

      - name: Install NodeJS 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Create build
        run: npm run build

      - name: Create '.env' file
        shell: bash
        env:
          ENV: ${{ secrets.ENV_FILE }}
        run: |
          echo "$ENV" > .env

      - name: Docker test build image
        run: docker build . --no-cache -t gadget-shop

      - name: Docker drop test image
        run: docker rmi gadget-shop

      - name: Deploying using SSH
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USER }}
          host: ${{ secrets.SSH_HOST }}
          port: 22
          script: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
            export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install latest
            cd /apps/gadget-shop/
            git status
            git checkout main
            git pull origin main
            npm install
            echo "${{ secrets.ENV_FILE }}" > .env
            npm run build
            pm2 restart dist/src/main.js --name gadget-shop
